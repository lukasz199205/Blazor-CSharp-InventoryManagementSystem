@page "/inventories"

@inject NavigationManager NavigationManager
@inject IViewInventoriesByNameUseCase ViewInventoriesByNameUseCase

<h3>InventoryList</h3>
<br/>
<SearchInventoryComponent OnSearchInventory="OnInventorySearch">
</SearchInventoryComponent>

<br/>
<InventoryListComponent SearchTerm="@searchTerm"></InventoryListComponent>
<br/>
<button type="button" class="btn btn-primary" @onclick="AddInventory"> Add Inventory</button>

<p>
    <AutoCompleteComponent Label="Inventory" SearchFunction="SearchInventory" OnItemSelected="OnItemSelected"></AutoCompleteComponent>
    <br/>
    @selectedItem?.Name
</p>
@code {
    private AutoCompleteComponent.ItemViewModel? selectedItem = null;
    
    private string searchTerm = String.Empty;
    
    private void OnInventorySearch(string searchTerm)
    {
        this.searchTerm = searchTerm;
    }

    private void AddInventory()
    {
        NavigationManager.NavigateTo("/addinventory");
    }

    private List<AutoCompleteComponent.ItemViewModel>? SearchInventory(string name)
    {
        var list = ViewInventoriesByNameUseCase.ExecuteAsync(name).GetAwaiter().GetResult();
        if (list == null) return null;

        return list.Select(x => new AutoCompleteComponent.ItemViewModel { Id = x.InventoryId, Name = x.InventoryName })?.ToList();
    }

    private void OnItemSelected(AutoCompleteComponent.ItemViewModel item)
    {
        this.selectedItem = item;
    }
}